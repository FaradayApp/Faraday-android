apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion versions.compileSdk

    namespace "io.matthewnelson.topl_service"

    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk

        consumerProguardFiles 'proguard-rules.pro'
    }

    buildFeatures {
        buildConfig true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility versions.sourceCompat
        targetCompatibility versions.targetCompat
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += [
                '-Xopt-in=kotlin.time.ExperimentalTime',
                '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
        ]
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "io.matthewnelson.topl-android:topl-core:2.1.2"
    api "io.matthewnelson.topl-android:topl-service-base:2.1.2"
    implementation "androidx.core:core-ktx:1.7.0"
    def lifecycleVersion = '2.4.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-process:${lifecycleVersion}"
    implementation "info.guardianproject:jtorctl:0.4.5.7"
    def coroutinesVersion = '1.5.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}"
    def kotlinVersion = '1.5.31'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
}
